{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAgCC,EAASC,GAChCA,IACDA,EAAMD,EAAQE,MAAM,IAExB,OAAOP,OAAOQ,OAAOR,OAAOS,iBAAiBJ,EAAS,CAClDC,IAAK,CACDH,MAAOH,OAAOQ,OAAOF,M,gHCVjC,IAAMI,EAAWC,SAASC,cAAc,QACxCF,EAASG,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAYC,OAAOP,EAASQ,SAASC,MAAMhB,OACzCiB,EAAWH,OAAOP,EAASQ,SAASG,KAAKlB,OACzCmB,EAAaL,OAAOP,EAASQ,SAASK,OAAOpB,OACnDW,EAAEU,OAAOC,QAET,IAAK,IAAIF,EAAS,EAAGA,EAASD,EAAYC,GAAU,EAClDG,EAAcH,EAAS,EAAIP,GAAaI,GACrCO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MACjBW,EAAAC,GAASC,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANf,EAAM,M,IAGjDgB,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MAClBW,EAAAC,GAASC,OAAOI,QACdC,IAAGC,IAAsBT,EAAeV,G,IAGhD,SAASO,EAAcG,EAAUV,GAW/B,OAVgB,IAAIoB,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEX,WAAUV,UAEpBsB,EAAO,CAAEZ,WAAUV,S,GAEnBA,GAASC,E","sources":["node_modules/@swc/helpers/lib/_tagged_template_literal.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _taggedTemplateLiteral;\nfunction _taggedTemplateLiteral(strings, raw) {\n    if (!raw) {\n        raw = strings.slice(0);\n    }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n            value: Object.freeze(raw)\n        }\n    }));\n}\n","import Notiflix from 'notiflix';\nconst formData = document.querySelector('form');\nformData.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let delayData = Number(formData.elements.delay.value);\n  const stepData = Number(formData.elements.step.value);\n  const amountData = Number(formData.elements.amount.value);\n  e.target.reset();\n\n  for (let amount = 0; amount < amountData; amount += 1)\n    createPromise(amount + 1, (delayData += stepData))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          npm`❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  function createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, (delay -= stepData));\n    });\n    return promise;\n  }\n}\n"],"names":["Object","defineProperty","$9150774b557bdbfe$exports","value","default","strings","raw","slice","freeze","defineProperties","$ce04d3a99e08e73b$var$formData","document","querySelector","addEventListener","e","preventDefault","delayData","Number","elements","delay","stepData","step","amountData","amount","target","reset","createPromise","then","param","position","$parcel$interopDefault","$iU1Pc","Notify","success","concat","catch","failure","npm","$ce04d3a99e08e73b$var$_templateObject","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.5b3b04d8.js.map"}